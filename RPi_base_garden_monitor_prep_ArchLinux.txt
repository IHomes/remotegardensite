#---------------------------------------------
# RasperryPi w/Arch Linux setup for GardenPi Base Station
# (Post NOOBS v.1.3.3 boot into Arch Linux)
#---------------------------------------------

#---------------------------------------------
# Misc General
#---------------------------------------------

pacman -Syu
pacman -S git 
pacman -S traceroute

#---------------------------------------------
# RPI900/dnt900/dnt3400 (to do all http://rpi900.com/ tutorials)
#---------------------------------------------

pacman -S linux-raspberrypi-headers
pacman -S base-devel abs bc wget 
pacman -S make
pacman -S gcc
pacman -S ppp


#---------------------------------------------
# Trying out plot.ly https://plot.ly/api/raspberrypi
# Modified for Arch Linux
# If GPIO analog used, this would come into play, for now, not using
#---------------------------------------------

# Arch linux details
# This is used by plot.ly and xively
pacman -S python2 
cd /usr/bin
ln -s python2 python
cd 
mkdir setuptools
wget https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -O - | sudo python
cd /usr/lib/python2.7/Tools/scripts
sudo easy_install -U distribute
pacman -S python2-pip # had to mv conflic to _prev
pacman -S base-devel  #select gcc
cd setuptools
wget https://pypi.python.org/packages/source/R/RPi.GPIO/RPi.GPIO-0.5.4.tar.gz #or latest
tar -xvzf RPi.GPIO-0.5.4.tar.gz
cd RPi.GPIO-0.5.4
python2 setup.py install
pip2 install --pre plotly
# An analog TMP36 sensor example
#cd 
#git clone https://github.com/alexander-daniel/raspi-plotly.git


# attempt of http://kempproject.blogspot.com/2014/02/plotting-hardware-stats-via-plotly.html
# looks to be python3 .... I think
cd /usr/bin
unlink python
pacman -S python
pacman -S python-pip
#needed since locale set to "C"?
nano /etc/locale.gen
#uncomment en_US.UTF-8 UTF-8
locale-gen
localectl set-locale LANG="en_US.utf8"
pip install --pre plotly
pacman -S python-psutil


#---------------------------------------------
# Setup vcgencmd to 
#---------------------------------------------
ln -s /opt/vc/bin/vcgencmd /usr/bin/vcgencmd


#---------------------------------------------
# Xively (python scripts), could really get away with just python2
#---------------------------------------------
pacman -S python
pacman -S python2
pacman -S python-pip
pacman -S python2-pip
pip2 install --pre xively-python 
pip install --pre xively-python

#---------------------------------------------
# Support for headless operations of Garden Sensors
# ref:
# http://supervisord.org/index.html
# https://wiki.archlinux.org/index.php/Systemd
#---------------------------------------------

pacman -S supervisor
cp ./systemd_files/supervisor.service /etc/systemd/system/

(replace After=ttyAmao with After=ppp-remote@.service  for base)



#---------------------------------------------
# Specifc supervisor conf for my scripts
#
# edit ./etc/supervisord.conf add the following:
#---------------------------------------------

[program:rem_base_rssi]
directory=/root/base_monitor/
command=/root/base_monitor/post_rssi_xively.py
autostart=true
autorestart=true

[program:cpu_temp]
directory=/root/base_monitor/
command=/root/base_monitor/cpu_temp.py
autostart=true
autorestart=true



systemctl enable supervisor.service
systemctl start supervisor.service


#---------------------------------------------
# Initial hack to get ntp time after boot
#---------------------------------------------

cp ./systemd_files/ntpd.service /etc/systemd/system/

systemctl enable ntpd.service
systemctl start ntpd.service

#---------------------------------------------
# In case of fsck issue
# ref:
# http://www.raspberrypi.org/phpBB3/viewtopic.php?p=477478
#---------------------------------------------

git clone http://daniel-baumann.ch/git/software/dosfstools.git
cd dosfstools
make
# usage:
# umount /boot
# ./fsck.fat -V /dev/<fsck fs issue reported in dmesg>
# (if dirty bit set select 1)
# ./fsck.fat -a /dev/<fsck fs issue reported in dmesg>
# mount /boot

#---------------------------------------------
# Not sure if really needed, pretty sure no...
#---------------------------------------------

pacman -S nss-mdns

# required for python-eeml
pacman -S libxml2
pacman -S python-lxml
git clone https://github.com/petervizi/python-eeml.git
cd python-eeml
python setup.py install


#---------------------------------------------
# Setup cronjobs
# Since I didn't set up NTP yet, check daily 
# ----Also option to reset radio link every now and again
# -----and including plot.ly cron since is not captured elsewhere
#---------------------------------------------

EDITOR=nano;
export EDITOR
crontab -e
#add the following
* * * * * /root/plotly/simple_hardware_plotly.py > /dev/null
0 2 * * * ntpdate -b -s -u pool.ntp.org
#0 3 * * * echo 0x00 > /sys/devices/virtual/dnt900/ttyAMA0/0x001308/UcReset
# no longer reseting radio connection
#confirm
crontab -l







